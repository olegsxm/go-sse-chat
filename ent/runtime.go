// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/olegsxm/go-sse-chat/ent/conversation"
	"github.com/olegsxm/go-sse-chat/ent/message"
	"github.com/olegsxm/go-sse-chat/ent/schema"
	"github.com/olegsxm/go-sse-chat/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	conversationFields := schema.Conversation{}.Fields()
	_ = conversationFields
	// conversationDescID is the schema descriptor for id field.
	conversationDescID := conversationFields[0].Descriptor()
	// conversation.DefaultID holds the default value on creation for the id field.
	conversation.DefaultID = conversationDescID.Default.(func() uuid.UUID)
	messageFields := schema.Message{}.Fields()
	_ = messageFields
	// messageDescMessage is the schema descriptor for message field.
	messageDescMessage := messageFields[1].Descriptor()
	// message.MessageValidator is a validator for the "message" field. It is called by the builders before save.
	message.MessageValidator = messageDescMessage.Validators[0].(func(string) error)
	// messageDescRead is the schema descriptor for read field.
	messageDescRead := messageFields[2].Descriptor()
	// message.DefaultRead holds the default value on creation for the read field.
	message.DefaultRead = messageDescRead.Default.(bool)
	// messageDescCreatedAt is the schema descriptor for created_at field.
	messageDescCreatedAt := messageFields[3].Descriptor()
	// message.DefaultCreatedAt holds the default value on creation for the created_at field.
	message.DefaultCreatedAt = messageDescCreatedAt.Default.(func() time.Time)
	// messageDescID is the schema descriptor for id field.
	messageDescID := messageFields[0].Descriptor()
	// message.DefaultID holds the default value on creation for the id field.
	message.DefaultID = messageDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescLogin is the schema descriptor for login field.
	userDescLogin := userFields[1].Descriptor()
	// user.LoginValidator is a validator for the "login" field. It is called by the builders before save.
	user.LoginValidator = userDescLogin.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[3].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
